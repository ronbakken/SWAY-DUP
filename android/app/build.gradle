def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
	localPropertiesFile.withReader('UTF-8') { reader ->
		localProperties.load((Reader)reader)
	}
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
	throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def gitVersionName() {
	return "git -C ${rootDir} describe --tags --long --dirty".execute().text.trim()
}

def gitVersionCode() {
	return "git -C ${rootDir} rev-list --count HEAD".execute().text.trim().toInteger()
}

apply plugin: 'com.android.application'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"


android {
	compileSdkVersion 28

	lintOptions {
		disable 'InvalidPackage'
	}

	defaultConfig {
		applicationId "com.swaymarketplace.app"
		minSdkVersion 18
		targetSdkVersion 28

		versionCode gitVersionCode()
		versionName gitVersionName()

		def apiHost = InetAddress.getLocalHost().getHostAddress()
		buildConfigField 'String', 'API_HOST', '"' + apiHost + '"'

		def (gitTag, gitCommits, gitSha1) = gitVersionName().tokenize('-')
		buildConfigField "String", "GIT_TAG", "\"${gitTag}\""
		buildConfigField "String", "GIT_COMMITS", "\"${gitCommits}\""
		buildConfigField "String", "GIT_SHA1", "\"${gitSha1}\""

		testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

		multiDexEnabled true
		multiDexKeepFile file('multidex-flutter.txt')
	}

	buildTypes {
		release {
			// TODO: Add your own signing config for the release build.
			// Signing with the debug keys for now, so `flutter run --release` works.
			signingConfig signingConfigs.debug
		}
	}

	flavorDimensions "env"

	productFlavors {
		dev {
			dimension "env"
			applicationIdSuffix ".dev"
			versionNameSuffix "-dev"
			project.flutter.target = "lib/main_dev.dart"
		}
		prod {
			dimension "env"
			project.flutter.target = "lib/main_prod.dart"
		}
	}

	compileOptions {
		sourceCompatibility 1.8
		targetCompatibility 1.8
	}
}

flutter {
	source '../..'
}

dependencies {
	implementation 'com.google.firebase:firebase-core:16.0.7'

	testImplementation 'junit:junit:4.12'
	androidTestImplementation 'com.android.support.test:runner:1.0.2'
	androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

	compileOnly files("$flutterRoot/bin/cache/artifacts/engine/android-x86/flutter.jar")
}

apply plugin: 'com.google.gms.google-services'
