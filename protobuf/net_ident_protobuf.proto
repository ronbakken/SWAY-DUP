/*
INF Marketplace
Copyright (C) 2018  INF Marketplace LLC
Author: Jan Boon <kaetemi@no-break.space>
*/

syntax = "proto3";

package inf_common;
option csharp_namespace = "InfCommon";

import 'enum_protobuf.proto';
import 'data_protobuf.proto';

/// Session payload. Assumes a secure connection is used.
message NetSessionPayload {
  /// If not set, require session creation.
  int64 session_id = 1;
  bytes cookie = 2;
  
  /// Information on the currently loaded config
  string environment = 7; // If mismatch, cannot serve this session at all
  int32 client_version = 3; // If mismatch, cannot serve this session at all
  int64 config_timestamp = 4; // If server timestamp is higher, request config download
  string config_region = 5; // Indicate the region of the user's current config
  string config_language = 6; // Indicate the language of the user's current config
  
}

/// Create a session with the current payload cookie
/// Procedure ID: 'SESSIONC'
/// Response: NetSession
message NetSessionCreate {
  /// Token for tracking which device, for statistics purposes only, not secure.
  /// Used to track multiple sessions accross a device (administration tools).
  bytes device_token = 1;
  
  /// More device information for developers
  string device_name = 2;
  string device_info = 3;
  
}

/// Remove the current session from the client. Sent by the server.
/// Procedure ID: 'SESREMOV'
message NetSessionRemove {
  
}

/// Session created successfully,
message NetSession {
  /// Newly created session id. Client uses this only to update the connection payload.
  int64 session_id = 1;
  
}

/// Request the user to download an updated configuration file.
/// Procedure ID: 'CONFDOWN'
message NetConfigDownload {
  string config_url = 1;
  
}

/* end of file */
