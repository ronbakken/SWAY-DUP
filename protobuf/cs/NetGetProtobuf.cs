// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net_get_protobuf.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace InfX {

  /// <summary>Holder for reflection information generated from net_get_protobuf.proto</summary>
  public static partial class NetGetProtobufReflection {

    #region Descriptor
    /// <summary>File descriptor for net_get_protobuf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static NetGetProtobufReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChZuZXRfZ2V0X3Byb3RvYnVmLnByb3RvEgNpbmYaE2RhdGFfcHJvdG9idWYu",
            "cHJvdG8iJQoQTmV0R2V0QWNjb3VudFJlcRIRCglhY2NvdW50SWQYASABKAUi",
            "NQoQTmV0R2V0QWNjb3VudFJlcxIhCgdhY2NvdW50GAEgASgLMhAuaW5mLkRh",
            "dGFBY2NvdW50IiEKDk5ldEdldE9mZmVyUmVxEg8KB29mZmVySWQYASABKAUi",
            "NwoOTmV0R2V0T2ZmZXJSZXMSJQoFb2ZmZXIYASABKAsyFi5pbmYuRGF0YUJ1",
            "c2luZXNzT2ZmZXIiKQoSTmV0R2V0QXBwbGljYW50UmVxEhMKC2FwcGxpY2Fu",
            "dElkGAEgASgFIjsKEk5ldEdldEFwcGxpY2FudFJlcxIlCglhcHBsaWNhbnQY",
            "ASABKAsyEi5pbmYuRGF0YUFwcGxpY2FudEIHqgIESW5mWGIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::InfX.DataProtobufReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::InfX.NetGetAccountReq), global::InfX.NetGetAccountReq.Parser, new[]{ "AccountId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::InfX.NetGetAccountRes), global::InfX.NetGetAccountRes.Parser, new[]{ "Account" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::InfX.NetGetOfferReq), global::InfX.NetGetOfferReq.Parser, new[]{ "OfferId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::InfX.NetGetOfferRes), global::InfX.NetGetOfferRes.Parser, new[]{ "Offer" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::InfX.NetGetApplicantReq), global::InfX.NetGetApplicantReq.Parser, new[]{ "ApplicantId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::InfX.NetGetApplicantRes), global::InfX.NetGetApplicantRes.Parser, new[]{ "Applicant" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  ///  Get Account
  ///  Id: GTACCOUN
  ///  Res: NetGetAccountRes (Id: GTACCO_R)
  /// </summary>
  public sealed partial class NetGetAccountReq : pb::IMessage<NetGetAccountReq> {
    private static readonly pb::MessageParser<NetGetAccountReq> _parser = new pb::MessageParser<NetGetAccountReq>(() => new NetGetAccountReq());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NetGetAccountReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::InfX.NetGetProtobufReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NetGetAccountReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NetGetAccountReq(NetGetAccountReq other) : this() {
      accountId_ = other.accountId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NetGetAccountReq Clone() {
      return new NetGetAccountReq(this);
    }

    /// <summary>Field number for the "accountId" field.</summary>
    public const int AccountIdFieldNumber = 1;
    private int accountId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int AccountId {
      get { return accountId_; }
      set {
        accountId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NetGetAccountReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NetGetAccountReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AccountId != other.AccountId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AccountId != 0) hash ^= AccountId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AccountId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(AccountId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AccountId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AccountId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NetGetAccountReq other) {
      if (other == null) {
        return;
      }
      if (other.AccountId != 0) {
        AccountId = other.AccountId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            AccountId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class NetGetAccountRes : pb::IMessage<NetGetAccountRes> {
    private static readonly pb::MessageParser<NetGetAccountRes> _parser = new pb::MessageParser<NetGetAccountRes>(() => new NetGetAccountRes());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NetGetAccountRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::InfX.NetGetProtobufReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NetGetAccountRes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NetGetAccountRes(NetGetAccountRes other) : this() {
      Account = other.account_ != null ? other.Account.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NetGetAccountRes Clone() {
      return new NetGetAccountRes(this);
    }

    /// <summary>Field number for the "account" field.</summary>
    public const int AccountFieldNumber = 1;
    private global::InfX.DataAccount account_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::InfX.DataAccount Account {
      get { return account_; }
      set {
        account_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NetGetAccountRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NetGetAccountRes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Account, other.Account)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (account_ != null) hash ^= Account.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (account_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Account);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (account_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Account);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NetGetAccountRes other) {
      if (other == null) {
        return;
      }
      if (other.account_ != null) {
        if (account_ == null) {
          account_ = new global::InfX.DataAccount();
        }
        Account.MergeFrom(other.Account);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (account_ == null) {
              account_ = new global::InfX.DataAccount();
            }
            input.ReadMessage(account_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///  Get Offer
  ///  Id: GTOFFERR
  ///  Res: NetGetOfferRes (Id: GTOFFE_R)
  /// </summary>
  public sealed partial class NetGetOfferReq : pb::IMessage<NetGetOfferReq> {
    private static readonly pb::MessageParser<NetGetOfferReq> _parser = new pb::MessageParser<NetGetOfferReq>(() => new NetGetOfferReq());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NetGetOfferReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::InfX.NetGetProtobufReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NetGetOfferReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NetGetOfferReq(NetGetOfferReq other) : this() {
      offerId_ = other.offerId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NetGetOfferReq Clone() {
      return new NetGetOfferReq(this);
    }

    /// <summary>Field number for the "offerId" field.</summary>
    public const int OfferIdFieldNumber = 1;
    private int offerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int OfferId {
      get { return offerId_; }
      set {
        offerId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NetGetOfferReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NetGetOfferReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OfferId != other.OfferId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (OfferId != 0) hash ^= OfferId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (OfferId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(OfferId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (OfferId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(OfferId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NetGetOfferReq other) {
      if (other == null) {
        return;
      }
      if (other.OfferId != 0) {
        OfferId = other.OfferId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            OfferId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class NetGetOfferRes : pb::IMessage<NetGetOfferRes> {
    private static readonly pb::MessageParser<NetGetOfferRes> _parser = new pb::MessageParser<NetGetOfferRes>(() => new NetGetOfferRes());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NetGetOfferRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::InfX.NetGetProtobufReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NetGetOfferRes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NetGetOfferRes(NetGetOfferRes other) : this() {
      Offer = other.offer_ != null ? other.Offer.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NetGetOfferRes Clone() {
      return new NetGetOfferRes(this);
    }

    /// <summary>Field number for the "offer" field.</summary>
    public const int OfferFieldNumber = 1;
    private global::InfX.DataBusinessOffer offer_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::InfX.DataBusinessOffer Offer {
      get { return offer_; }
      set {
        offer_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NetGetOfferRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NetGetOfferRes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Offer, other.Offer)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (offer_ != null) hash ^= Offer.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (offer_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Offer);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (offer_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Offer);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NetGetOfferRes other) {
      if (other == null) {
        return;
      }
      if (other.offer_ != null) {
        if (offer_ == null) {
          offer_ = new global::InfX.DataBusinessOffer();
        }
        Offer.MergeFrom(other.Offer);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (offer_ == null) {
              offer_ = new global::InfX.DataBusinessOffer();
            }
            input.ReadMessage(offer_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///  Get Applicant
  ///  Id: GTAPPLIC
  ///  Res: NetGetApplicantRes (Id: GTAPPL_R)
  /// </summary>
  public sealed partial class NetGetApplicantReq : pb::IMessage<NetGetApplicantReq> {
    private static readonly pb::MessageParser<NetGetApplicantReq> _parser = new pb::MessageParser<NetGetApplicantReq>(() => new NetGetApplicantReq());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NetGetApplicantReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::InfX.NetGetProtobufReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NetGetApplicantReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NetGetApplicantReq(NetGetApplicantReq other) : this() {
      applicantId_ = other.applicantId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NetGetApplicantReq Clone() {
      return new NetGetApplicantReq(this);
    }

    /// <summary>Field number for the "applicantId" field.</summary>
    public const int ApplicantIdFieldNumber = 1;
    private int applicantId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ApplicantId {
      get { return applicantId_; }
      set {
        applicantId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NetGetApplicantReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NetGetApplicantReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ApplicantId != other.ApplicantId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ApplicantId != 0) hash ^= ApplicantId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ApplicantId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ApplicantId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ApplicantId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ApplicantId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NetGetApplicantReq other) {
      if (other == null) {
        return;
      }
      if (other.ApplicantId != 0) {
        ApplicantId = other.ApplicantId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            ApplicantId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class NetGetApplicantRes : pb::IMessage<NetGetApplicantRes> {
    private static readonly pb::MessageParser<NetGetApplicantRes> _parser = new pb::MessageParser<NetGetApplicantRes>(() => new NetGetApplicantRes());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NetGetApplicantRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::InfX.NetGetProtobufReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NetGetApplicantRes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NetGetApplicantRes(NetGetApplicantRes other) : this() {
      Applicant = other.applicant_ != null ? other.Applicant.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NetGetApplicantRes Clone() {
      return new NetGetApplicantRes(this);
    }

    /// <summary>Field number for the "applicant" field.</summary>
    public const int ApplicantFieldNumber = 1;
    private global::InfX.DataApplicant applicant_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::InfX.DataApplicant Applicant {
      get { return applicant_; }
      set {
        applicant_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NetGetApplicantRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NetGetApplicantRes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Applicant, other.Applicant)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (applicant_ != null) hash ^= Applicant.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (applicant_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Applicant);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (applicant_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Applicant);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NetGetApplicantRes other) {
      if (other == null) {
        return;
      }
      if (other.applicant_ != null) {
        if (applicant_ == null) {
          applicant_ = new global::InfX.DataApplicant();
        }
        Applicant.MergeFrom(other.Applicant);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (applicant_ == null) {
              applicant_ = new global::InfX.DataApplicant();
            }
            input.ReadMessage(applicant_);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
