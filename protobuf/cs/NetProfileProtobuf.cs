// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net_profile_protobuf.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace InfX {

  /// <summary>Holder for reflection information generated from net_profile_protobuf.proto</summary>
  public static partial class NetProfileProtobufReflection {

    #region Descriptor
    /// <summary>File descriptor for net_profile_protobuf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static NetProfileProtobufReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChpuZXRfcHJvZmlsZV9wcm90b2J1Zi5wcm90bxIDaW5mIo4BChBOZXRQcm9m",
            "aWxlTW9kaWZ5EgwKBG5hbWUYASABKAkSEwoLZGVzY3JpcHRpb24YAiABKAkS",
            "EQoJYXZhdGFyS2V5GAQgASgJEgsKA3VybBgGIAEoCRISCgpjYXRlZ29yaWVz",
            "GBAgASgMEhAKCGxhdGl0dWRlGA4gASgBEhEKCWxvbmdpdHVkZRgPIAEoAUIH",
            "qgIESW5mWGIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::InfX.NetProfileModify), global::InfX.NetProfileModify.Parser, new[]{ "Name", "Description", "AvatarKey", "Url", "Categories", "Latitude", "Longitude" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  ///  Id: PRMODIFY
  /// </summary>
  public sealed partial class NetProfileModify : pb::IMessage<NetProfileModify> {
    private static readonly pb::MessageParser<NetProfileModify> _parser = new pb::MessageParser<NetProfileModify>(() => new NetProfileModify());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NetProfileModify> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::InfX.NetProfileProtobufReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NetProfileModify() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NetProfileModify(NetProfileModify other) : this() {
      name_ = other.name_;
      description_ = other.description_;
      avatarKey_ = other.avatarKey_;
      url_ = other.url_;
      categories_ = other.categories_;
      latitude_ = other.latitude_;
      longitude_ = other.longitude_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NetProfileModify Clone() {
      return new NetProfileModify(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    ///  Basics
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 2;
    private string description_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "avatarKey" field.</summary>
    public const int AvatarKeyFieldNumber = 4;
    private string avatarKey_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AvatarKey {
      get { return avatarKey_; }
      set {
        avatarKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "url" field.</summary>
    public const int UrlFieldNumber = 6;
    private string url_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Url {
      get { return url_; }
      set {
        url_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "categories" field.</summary>
    public const int CategoriesFieldNumber = 16;
    private pb::ByteString categories_ = pb::ByteString.Empty;
    /// <summary>
    ///  repeated CategoryId categories = 12;
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Categories {
      get { return categories_; }
      set {
        categories_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "latitude" field.</summary>
    public const int LatitudeFieldNumber = 14;
    private double latitude_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Latitude {
      get { return latitude_; }
      set {
        latitude_ = value;
      }
    }

    /// <summary>Field number for the "longitude" field.</summary>
    public const int LongitudeFieldNumber = 15;
    private double longitude_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Longitude {
      get { return longitude_; }
      set {
        longitude_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NetProfileModify);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NetProfileModify other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Description != other.Description) return false;
      if (AvatarKey != other.AvatarKey) return false;
      if (Url != other.Url) return false;
      if (Categories != other.Categories) return false;
      if (Latitude != other.Latitude) return false;
      if (Longitude != other.Longitude) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (AvatarKey.Length != 0) hash ^= AvatarKey.GetHashCode();
      if (Url.Length != 0) hash ^= Url.GetHashCode();
      if (Categories.Length != 0) hash ^= Categories.GetHashCode();
      if (Latitude != 0D) hash ^= Latitude.GetHashCode();
      if (Longitude != 0D) hash ^= Longitude.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Description);
      }
      if (AvatarKey.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(AvatarKey);
      }
      if (Url.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Url);
      }
      if (Latitude != 0D) {
        output.WriteRawTag(113);
        output.WriteDouble(Latitude);
      }
      if (Longitude != 0D) {
        output.WriteRawTag(121);
        output.WriteDouble(Longitude);
      }
      if (Categories.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteBytes(Categories);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (AvatarKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AvatarKey);
      }
      if (Url.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Url);
      }
      if (Categories.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeBytesSize(Categories);
      }
      if (Latitude != 0D) {
        size += 1 + 8;
      }
      if (Longitude != 0D) {
        size += 1 + 8;
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NetProfileModify other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      if (other.AvatarKey.Length != 0) {
        AvatarKey = other.AvatarKey;
      }
      if (other.Url.Length != 0) {
        Url = other.Url;
      }
      if (other.Categories.Length != 0) {
        Categories = other.Categories;
      }
      if (other.Latitude != 0D) {
        Latitude = other.Latitude;
      }
      if (other.Longitude != 0D) {
        Longitude = other.Longitude;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Description = input.ReadString();
            break;
          }
          case 34: {
            AvatarKey = input.ReadString();
            break;
          }
          case 50: {
            Url = input.ReadString();
            break;
          }
          case 113: {
            Latitude = input.ReadDouble();
            break;
          }
          case 121: {
            Longitude = input.ReadDouble();
            break;
          }
          case 130: {
            Categories = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
