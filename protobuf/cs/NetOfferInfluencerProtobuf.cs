// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net_offer_influencer_protobuf.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace InfX {

  /// <summary>Holder for reflection information generated from net_offer_influencer_protobuf.proto</summary>
  public static partial class NetOfferInfluencerProtobufReflection {

    #region Descriptor
    /// <summary>File descriptor for net_offer_influencer_protobuf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static NetOfferInfluencerProtobufReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiNuZXRfb2ZmZXJfaW5mbHVlbmNlcl9wcm90b2J1Zi5wcm90bxIDaW5mIksK",
            "EE5ldE9mZmVyQXBwbHlSZXESDwoHb2ZmZXJJZBgBIAEoBRIVCg1kZXZpY2VH",
            "aG9zdElkGAggASgFEg8KB3JlbWFya3MYAiABKAlCB6oCBEluZlhiBnByb3Rv",
            "Mw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::InfX.NetOfferApplyReq), global::InfX.NetOfferApplyReq.Parser, new[]{ "OfferId", "DeviceGhostId", "Remarks" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  ///  Apply for offer
  ///  Id: O_APPLYY
  ///  Response: DataApplicant (Id: O_R_APPL) (or exception in case of failure)
  /// </summary>
  public sealed partial class NetOfferApplyReq : pb::IMessage<NetOfferApplyReq> {
    private static readonly pb::MessageParser<NetOfferApplyReq> _parser = new pb::MessageParser<NetOfferApplyReq>(() => new NetOfferApplyReq());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NetOfferApplyReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::InfX.NetOfferInfluencerProtobufReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NetOfferApplyReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NetOfferApplyReq(NetOfferApplyReq other) : this() {
      offerId_ = other.offerId_;
      deviceGhostId_ = other.deviceGhostId_;
      remarks_ = other.remarks_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NetOfferApplyReq Clone() {
      return new NetOfferApplyReq(this);
    }

    /// <summary>Field number for the "offerId" field.</summary>
    public const int OfferIdFieldNumber = 1;
    private int offerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int OfferId {
      get { return offerId_; }
      set {
        offerId_ = value;
      }
    }

    /// <summary>Field number for the "deviceGhostId" field.</summary>
    public const int DeviceGhostIdFieldNumber = 8;
    private int deviceGhostId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int DeviceGhostId {
      get { return deviceGhostId_; }
      set {
        deviceGhostId_ = value;
      }
    }

    /// <summary>Field number for the "remarks" field.</summary>
    public const int RemarksFieldNumber = 2;
    private string remarks_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Remarks {
      get { return remarks_; }
      set {
        remarks_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NetOfferApplyReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NetOfferApplyReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OfferId != other.OfferId) return false;
      if (DeviceGhostId != other.DeviceGhostId) return false;
      if (Remarks != other.Remarks) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (OfferId != 0) hash ^= OfferId.GetHashCode();
      if (DeviceGhostId != 0) hash ^= DeviceGhostId.GetHashCode();
      if (Remarks.Length != 0) hash ^= Remarks.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (OfferId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(OfferId);
      }
      if (Remarks.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Remarks);
      }
      if (DeviceGhostId != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(DeviceGhostId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (OfferId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(OfferId);
      }
      if (DeviceGhostId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DeviceGhostId);
      }
      if (Remarks.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Remarks);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NetOfferApplyReq other) {
      if (other == null) {
        return;
      }
      if (other.OfferId != 0) {
        OfferId = other.OfferId;
      }
      if (other.DeviceGhostId != 0) {
        DeviceGhostId = other.DeviceGhostId;
      }
      if (other.Remarks.Length != 0) {
        Remarks = other.Remarks;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            OfferId = input.ReadInt32();
            break;
          }
          case 18: {
            Remarks = input.ReadString();
            break;
          }
          case 64: {
            DeviceGhostId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
