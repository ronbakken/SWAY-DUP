/*
INF Marketplace
Copyright (C) 2018  INF Marketplace LLC
Author: Jan Boon <kaetemi@no-break.space>
*/

syntax = "proto3";

package inf_common;
option csharp_namespace = InfCommon;

import 'enum_protobuf.proto';

message ConfigSubCategories {
  repeated string labels = 1;
}

message ConfigCategories {
  repeated ConfigSubCategories sub = 1;
}

message ConfigOAuthProvider {
  /// Whether the OAuth provider is visible in the UI at all
  bool visible = 1;
  
  /// Whether to allow new connections to this provider
  bool canConnect = 19;
  
  /// Whether the OAuth provider can always be used to authenticate
  bool canAlwaysAuthenticate = 2;
  
  /// Whether this social provider can be shown in the user profile at all
  bool showInProfile = 20;
  
  /// Visual name
  string label = 3;
  int32 fontAwesomeBrand = 14;
  
  /// OAuth mechanism
  OAuthMechanism mechanism = 15;
  
  /// API endpoints of the OAuth provider
  string host = 4;
  
  /// Url that will be used to detect login success by the app
  string callbackUrl = 9;
  
  /// API endpoints for Twitter-like OAuth
  string requestTokenUrl = 5; // If request token is not set, the alternate mechanism is used
  string authenticateUrl = 6;
  string accessTokenUrl = 16;
  
  /// Generated by the OAuth provider, Twitter-like
  string consumerKey = 10;
  string consumerSecret = 11;
  
  /// API endpoints for Spotify-like OAuth
  string authUrl = 7;
  string authQuery = 8;
  
  /// From OAuth provider, Spotify-like
  string clientId = 12;
  string clientSecret = 17;
  
  /// Whitelisted hosts during authentication
  repeated string whitelistHosts = 18;
  
}

message ConfigOAuthProviders {
  /// List of all OAuthProviders
  repeated ConfigOAuthProvider all = 1;
  
}

message ConfigServices {
  // INF
  string domain = 24;
  repeated string apiHosts = 8;
  string configUrl = 9;
  string termsOfServiceUrl = 10;
  string privacyPolicyUrl = 11;
  string connectionFailedUrl = 29;
  
  // MapBox
  string mapboxApi = 1;
  string mapboxUrlTemplateDark = 2;
  string mapboxUrlTemplateLight = 30;
  string mapboxToken = 3;
  
  // DigitalOcean Spaces
  string spacesRegion = 4;
  string spacesKey = 5;
  string spacesSecret = 6;
  string spacesBucket = 7;
  
  // Cloudinary (Url Templates)
  string cloudinaryUrl = 19;
  string cloudinaryThumbnailUrl = 20;
  string cloudinaryBlurredThumbnailUrl = 31;
  string cloudinaryCoverUrl = 21;
  string cloudinaryBlurredCoverUrl = 32;
  
  // IPStack (FreeGeoIP)
  string ipstackApi = 13;
  string ipstackKey = 12;
  
  // MariaDB (MySQL)
  string mariadbHost = 14;
  int32 mariadbPort = 15;
  string mariadbUser = 16;
  string mariadbPassword = 17;
  string mariadbDatabase = 18;
  
  // Freshdesk (Support)
  string freshdeskApi = 22;
  string freshdeskKey = 23;
  
  // Firebase (Cloud Messaging)
  string firebaseServerKey = 25;
  string firebaseSenderId = 26;
  string firebaseLegacyApi = 27;
  string firebaseLegacyServerKey = 28;
  
}

message ConfigContent {
  repeated string welcome_image_urls = 1;
  
}

message ConfigData {
  /// If this goes up in a config, the client must be updated
  int32 clientVersion = 1;
  
  /// Timestamp when the config was built. Unix epoch UTC milliseconds
  int64 timestamp = 5;
  
  /// Configuration data
  ConfigCategories categories = 2;
  ConfigOAuthProviders oauthProviders = 3;
  ConfigServices services = 6;
  ConfigContent content = 7;
  
}

/* end of file */
