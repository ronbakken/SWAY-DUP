import 'package:flutter/material.dart';

InputDecoration removeInputDecoration(
  InputDecoration decoration, {
  bool icon = false,
  bool labelText = false,
  bool labelStyle = false,
  bool helperText = false,
  bool helperStyle = false,
  bool hintText = false,
  bool hintStyle = false,
  bool hintMaxLines = false,
  bool errorText = false,
  bool errorStyle = false,
  bool errorMaxLines = false,
  bool hasFloatingPlaceholder = false,
  bool isDense = false,
  bool contentPadding = false,
  bool prefixIcon = false,
  bool prefix = false,
  bool prefixText = false,
  bool prefixStyle = false,
  bool suffixIcon = false,
  bool suffix = false,
  bool suffixText = false,
  bool suffixStyle = false,
  bool counter = false,
  bool counterText = false,
  bool counterStyle = false,
  bool filled = false,
  bool fillColor = false,
  bool errorBorder = false,
  bool focusedBorder = false,
  bool focusedErrorBorder = false,
  bool disabledBorder = false,
  bool enabledBorder = false,
  bool border = false,
  bool enabled = false,
  bool semanticCounterText = false,
  bool alignLabelWithHint = false,
}) {
  return InputDecoration(
    icon: icon ? null : decoration.icon,
    labelText: labelText ? null : decoration.labelText,
    labelStyle: labelStyle ? null : decoration.labelStyle,
    helperText: helperText ? null : decoration.helperText,
    helperStyle: helperStyle ? null : decoration.helperStyle,
    hintText: hintText ? null : decoration.hintText,
    hintStyle: hintStyle ? null : decoration.hintStyle,
    hintMaxLines: hintMaxLines ? null : decoration.hintMaxLines,
    errorText: errorText ? null : decoration.errorText,
    errorStyle: errorStyle ? null : decoration.errorStyle,
    errorMaxLines: errorMaxLines ? null : decoration.errorMaxLines,
    hasFloatingPlaceholder: hasFloatingPlaceholder ? null : decoration.hasFloatingPlaceholder,
    isDense: isDense ? null : decoration.isDense,
    contentPadding: contentPadding ? null : decoration.contentPadding,
    prefixIcon: prefixIcon ? null : decoration.prefixIcon,
    prefix: prefix ? null : decoration.prefix,
    prefixText: prefixText ? null : decoration.prefixText,
    prefixStyle: prefixStyle ? null : decoration.prefixStyle,
    suffixIcon: suffixIcon ? null : decoration.suffixIcon,
    suffix: suffix ? null : decoration.suffix,
    suffixText: suffixText ? null : decoration.suffixText,
    suffixStyle: suffixStyle ? null : decoration.suffixStyle,
    counter: counter ? null : decoration.counter,
    counterText: counterText ? null : decoration.counterText,
    counterStyle: counterStyle ? null : decoration.counterStyle,
    filled: filled ? null : decoration.filled,
    fillColor: fillColor ? null : decoration.fillColor,
    errorBorder: errorBorder ? null : decoration.errorBorder,
    focusedBorder: focusedBorder ? null : decoration.focusedBorder,
    focusedErrorBorder: focusedErrorBorder ? null : decoration.focusedErrorBorder,
    disabledBorder: disabledBorder ? null : decoration.disabledBorder,
    enabledBorder: enabledBorder ? null : decoration.enabledBorder,
    border: border ? null : decoration.border,
    enabled: enabled ? null : decoration.enabled,
    semanticCounterText: semanticCounterText ? null : decoration.semanticCounterText,
    alignLabelWithHint: alignLabelWithHint ? null : decoration.alignLabelWithHint,
  );
}
