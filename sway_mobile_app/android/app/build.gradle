def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '19'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0.19'
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

// See https://flutter.io/android-release/
def keystorePropertiesFile = rootProject.file("key.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
android {
    compileSdkVersion 29

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    lintOptions {
        disable 'InvalidPackage'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "app.infsandbox"
        minSdkVersion 16
        targetSdkVersion 29
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        multiDexEnabled true
    }

    signingConfigs {
        // See https://flutter.io/android-release/
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }

    buildTypes {
        // See https://flutter.io/android-release/
        release {
            signingConfig signingConfigs.release
            // minifyEnabled true
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    
    // implementation platform('com.google.firebase:firebase-bom:25.12.0')
    // implementation 'com.google.firebase:firebase-core'
    // implementation 'androidx.annotation:annotation:1.1.0'

    // implementation 'com.google.code.gson:gson:2.8.5'

    // https://appcenter.ms/orgs/sway-dev/apps/INF-Sandbox-Android
    // def appCenterSdkVersion = '4.0.0'
    // implementation "com.microsoft.appcenter:appcenter-analytics:${appCenterSdkVersion}"
    // implementation "com.microsoft.appcenter:appcenter-crashes:${appCenterSdkVersion}"

    // implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    // implementation "androidx.lifecycle:lifecycle-runtime:2.2.0"
    // implementation "androidx.lifecycle:lifecycle-common-java8:2.2.0"

}

// apply plugin: 'com.google.gms.google-services'
// com.google.gms.googleservices.GoogleServicesPlugin.config.disableVersionCheck = true
